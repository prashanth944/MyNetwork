// The following code is for connect the database from the Visual code add the following code in web.config under the configuration

<connectionStrings>  
    <add name="dbconnection" connectionString="Data Source=Soumalya;Integrated Security=true;Initial Catalog=MySampleDB" providerName="System.Data.SqlClient" />   
</connectionStrings>  

//Authentication section

https://www.wideskills.com/aspnet/authentication-and-authorization

<authentication mode=”Forms”>
  <forms name=”Login”
  loginURL=”Data1.aspx”
  protection=”All”
  timeout=”10”
  path=”/” />
</authentication>

// Stored Procedure for CRUD 

CREATE PROCEDURE [dbo].[Usp_InsertUpdateDelete_Customer]  
@CustomerID INT = NULL  
,@Name NVARCHAR(100) = NULL  
,@Mobileno NVARCHAR(15) = NULL  
,@Address NVARCHAR(300) = 0  
,@Birthdate DATETIME = NULL  
,@EmailID NVARCHAR(15) = NULL  
,@Query INT  
AS  
BEGIN  
IF (@Query = 1)  
BEGIN  

INSERT INTO Customer(  
NAME  
,Address  
,Mobileno  
,Birthdate  
,EmailID  
)  
VALUES (  
@Name  
,@Address  
,@Mobileno  
,@Birthdate  
,@EmailID  
)  
IF (@@ROWCOUNT > 0)  
BEGIN  
SELECT 'Insert'  
END  
END  
IF (@Query = 2)  
BEGIN  
UPDATE Customer  
SET NAME = @Name  
,Address = @Address  
,Mobileno = @Mobileno  
,Birthdate = @Birthdate  
,EmailID = @EmailID  
WHERE Customer.CustomerID = @CustomerID  
SELECT 'Update'  
END  
IF (@Query = 3)  
BEGIN  
DELETE  
FROM Customer  
WHERE Customer.CustomerID = @CustomerID  
SELECT 'Deleted'  
END  
IF (@Query = 4)  
BEGIN  
SELECT *  
FROM Customer  
END  
END  
IF (@Query = 5)  
BEGIN  
SELECT *  
FROM Customer  
WHERE Customer.CustomerID = @CustomerID  
END   

//for CRUD opertions in ASP.NET using the Stored Procedures.

public string InsertData(Customer objcust)    
        {    
            
            try    
            {    
                string con = ConfigurationManager.ConnectionStrings["dbconnection"].ToString();
                SqlConnection sqlcon = new SqlConnection(con);    
                SqlCommand cmd = new SqlCommand("Usp_InsertUpdateDelete_Customer", con);    
                cmd.CommandType = CommandType.StoredProcedure;    
                //cmd.Parameters.AddWithValue("@CustomerID", 0);    
                cmd.Parameters.AddWithValue("@Name", objcust.Name);    
                cmd.Parameters.AddWithValue("@Address", objcust.Address);    
                cmd.Parameters.AddWithValue("@Mobileno", objcust.Mobileno);    
                cmd.Parameters.AddWithValue("@Birthdate", objcust.Birthdate);    
                cmd.Parameters.AddWithValue("@EmailID", objcust.EmailID);    
                cmd.Parameters.AddWithValue("@Query", 1);    
                con.Open();    
                result = cmd.ExecuteScalar().ToString();    
                return result;    
            }    
            catch    
            {    
                return result = "";    
            }    
            finally    
            {    
                con.Close();    
            }    
        }    
        
   public string UpdateData(Customer objcust)    
        {    
               
            try    
            {    
              string con = ConfigurationManager.ConnectionStrings["dbconnection"].ToString();
                SqlConnection sqlcon = new SqlConnection(con);    
                SqlCommand cmd = new SqlCommand("Usp_InsertUpdateDelete_Customer", con);    
                cmd.CommandType = CommandType.StoredProcedure;    
                cmd.Parameters.AddWithValue("@CustomerID", objcust.CustomerID);    
                cmd.Parameters.AddWithValue("@Name", objcust.Name);    
                cmd.Parameters.AddWithValue("@Address", objcust.Address);    
                cmd.Parameters.AddWithValue("@Mobileno", objcust.Mobileno);    
                cmd.Parameters.AddWithValue("@Birthdate", objcust.Birthdate);    
                cmd.Parameters.AddWithValue("@EmailID", objcust.EmailID);    
                cmd.Parameters.AddWithValue("@Query", 2);    
                con.Open();    
                result = cmd.ExecuteScalar().ToString();    
                return result;    
            }    
            catch    
            {    
                return result = "";    
            }    
            finally    
            {    
                con.Close();    
            }    
        }  
        
  public int DeleteData(String ID)    
        {    
             
            try    
            {    
              string con = ConfigurationManager.ConnectionStrings["dbconnection"].ToString();
                SqlConnection sqlcon = new SqlConnection(con);    
                SqlCommand cmd = new SqlCommand("Usp_InsertUpdateDelete_Customer", con);    
                cmd.CommandType = CommandType.StoredProcedure;    
                cmd.Parameters.AddWithValue("@CustomerID", ID);    
                cmd.Parameters.AddWithValue("@Name", null);    
                cmd.Parameters.AddWithValue("@Address", null);    
                cmd.Parameters.AddWithValue("@Mobileno", null);    
                cmd.Parameters.AddWithValue("@Birthdate", null);    
                cmd.Parameters.AddWithValue("@EmailID", null);    
                cmd.Parameters.AddWithValue("@Query", 3);    
                con.Open();    
                result = cmd.ExecuteNonQuery();    
                return result;    
            }    
            catch    
            {    
                return result = 0;    
            }    
            finally    
            {    
                con.Close();    
            }    
        } 
       
  public List<Customer> Selectalldata()    
        {    
             
            List<Customer> custlist = null;    
            try    
            {    
                string con = ConfigurationManager.ConnectionStrings["dbconnection"].ToString();
                SqlConnection sqlcon = new SqlConnection(con);   
                SqlCommand cmd = new SqlCommand("Usp_InsertUpdateDelete_Customer", con);    
                cmd.CommandType = CommandType.StoredProcedure;    
                cmd.Parameters.AddWithValue("@CustomerID", null);    
                cmd.Parameters.AddWithValue("@Name", null);    
                cmd.Parameters.AddWithValue("@Address", null);    
                cmd.Parameters.AddWithValue("@Mobileno", null);    
                cmd.Parameters.AddWithValue("@Birthdate", null);    
                cmd.Parameters.AddWithValue("@EmailID", null);    
                cmd.Parameters.AddWithValue("@Query", 4);    
                con.Open();    
                SqlDataAdapter da = new SqlDataAdapter();    
                da.SelectCommand = cmd;    
                ds = new DataSet();    
                da.Fill(ds);    
                custlist = new List<Customer>();    
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)    
                {    
                    Customer cobj = new Customer();    
                    cobj.CustomerID = Convert.ToInt32(ds.Tables[0].Rows[i]["CustomerID"].ToString());    
                    cobj.Name = ds.Tables[0].Rows[i]["Name"].ToString();    
                    cobj.Address = ds.Tables[0].Rows[i]["Address"].ToString();    
                    cobj.Mobileno = ds.Tables[0].Rows[i]["Mobileno"].ToString();    
                    cobj.EmailID = ds.Tables[0].Rows[i]["EmailID"].ToString();    
                    cobj.Birthdate = Convert.ToDateTime(ds.Tables[0].Rows[i]["Birthdate"].ToString());    
    
                    custlist.Add(cobj);    
                }    
                return custlist;    
            }    
            catch    
            {    
                return custlist;    
            }    
            finally    
            {    
                con.Close();    
            }    
        }    

 public Customer SelectDatabyID(string CustomerID)    
        {    
            SqlConnection con = null;    
            DataSet ds = null;    
            Customer cobj = null;    
            try    
            {    
                string con = ConfigurationManager.ConnectionStrings["dbconnection"].ToString();
                SqlConnection sqlcon = new SqlConnection(con);    
                SqlCommand cmd = new SqlCommand("Usp_InsertUpdateDelete_Customer", con);    
                cmd.CommandType = CommandType.StoredProcedure;    
                cmd.Parameters.AddWithValue("@CustomerID", CustomerID);    
                cmd.Parameters.AddWithValue("@Name", null);    
                cmd.Parameters.AddWithValue("@Address", null);    
                cmd.Parameters.AddWithValue("@Mobileno", null);    
                cmd.Parameters.AddWithValue("@Birthdate", null);    
                cmd.Parameters.AddWithValue("@EmailID", null);    
                cmd.Parameters.AddWithValue("@Query", 5);    
                SqlDataAdapter da = new SqlDataAdapter();    
                da.SelectCommand = cmd;    
                ds = new DataSet();    
                da.Fill(ds);    
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)    
                {    
                    cobj = new Customer();    
                    cobj.CustomerID = Convert.ToInt32(ds.Tables[0].Rows[i]["CustomerID"].ToString());    
                    cobj.Name = ds.Tables[0].Rows[i]["Name"].ToString();    
                    cobj.Address = ds.Tables[0].Rows[i]["Address"].ToString();    
                    cobj.Mobileno = ds.Tables[0].Rows[i]["Mobileno"].ToString();    
                    cobj.EmailID = ds.Tables[0].Rows[i]["EmailID"].ToString();    
                    cobj.Birthdate = Convert.ToDateTime(ds.Tables[0].Rows[i]["Birthdate"].ToString());    
    
                }    
                return cobj;    
            }    
            catch    
            {    
                return cobj;    
            }    
            finally    
            {    
                con.Close();    
            }    
        }    
        
        
        
        
        //Using with the GridView 
        
        //http://www.mukeshkumar.net/articles/aspnet/crud-operation-in-asp-net-gridview-using-single-stored-procedure
        
        using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace GridViewDemo
{
    public partial class GridViewDemo : System.Web.UI.Page
    {
        private string strConnectionString = ConfigurationManager.ConnectionStrings["myconnection"].ConnectionString;
        private SqlCommand _sqlCommand;
        private SqlDataAdapter _sqlDataAdapter;
        DataSet _dtSet;
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                BindEmployeeData();
            }

        }
        public void CreateConnection()
        {
            SqlConnection _sqlConnection = new SqlConnection(strConnectionString);
            _sqlCommand = new SqlCommand();
            _sqlCommand.Connection = _sqlConnection;
        }
        public void OpenConnection()
        {
            _sqlCommand.Connection.Open();
        }
        public void CloseConnection()
        {
            _sqlCommand.Connection.Close();
        }
        public void DisposeConnection()
        {
            _sqlCommand.Connection.Dispose();
        }
        public void BindEmployeeData()
        {
            try
            {
                CreateConnection();
                OpenConnection();
                _sqlCommand.CommandText = "usp_GridViewExample";
                _sqlCommand.CommandType = CommandType.StoredProcedure;
                _sqlCommand.Parameters.AddWithValue("@Event", "Select");
                _sqlDataAdapter = new SqlDataAdapter(_sqlCommand);
                _dtSet = new DataSet();
                _sqlDataAdapter.Fill(_dtSet);
                grvEmployee.DataSource = _dtSet;
                grvEmployee.DataBind();
            }
            catch (Exception ex)
            {
                Response.Redirect("The Error is " + ex);
            }
            finally
            {
                CloseConnection();
                DisposeConnection();
            }
        }

        protected void btnAddEmployee_Click(object sender, EventArgs e)
        {
            try
            {
                CreateConnection();
                OpenConnection();
                _sqlCommand.CommandText = "usp_GridViewExample";
                _sqlCommand.CommandType = CommandType.StoredProcedure;
                _sqlCommand.Parameters.AddWithValue("@Event", "Add");
                _sqlCommand.Parameters.AddWithValue("@FirstName", Convert.ToString(txtFirstName.Text.Trim()));
                _sqlCommand.Parameters.AddWithValue("@LastName", Convert.ToString(txtLastName.Text.Trim()));
                _sqlCommand.Parameters.AddWithValue("@PhoneNumber", Convert.ToString(txtPhoneNumber.Text.Trim()));
                _sqlCommand.Parameters.AddWithValue("@EmailAddress", Convert.ToString(txtEmailAddress.Text.Trim()));
                _sqlCommand.Parameters.AddWithValue("@Salary", Convert.ToDecimal(txtSalary.Text));
                int result = Convert.ToInt32(_sqlCommand.ExecuteNonQuery());
                if (result > 0)
                {
                    lblMessage.Text = "Record Added Successfully";
                    lblMessage.ForeColor = System.Drawing.Color.Green;
                    BindEmployeeData();
                }
                else
                {
                    lblMessage.Text = "Failed";
                    lblMessage.ForeColor = System.Drawing.Color.Red;                
                }
            }
            catch (Exception ex)
            {
                lblMessage.Text = "Check your input data";
                lblMessage.ForeColor = System.Drawing.Color.Red;  
            }
            finally
            {
                CloseConnection();
                DisposeConnection();
            }
        }

        protected void grvEmployee_RowEditing(object sender, GridViewEditEventArgs e)
        {
            grvEmployee.EditIndex = e.NewEditIndex;
            BindEmployeeData();
        }

        protected void grvEmployee_RowDeleting(object sender, GridViewDeleteEventArgs e)
        {
            try
            {
                CreateConnection();
                OpenConnection();
              Label id = (Label)grvEmployee.Rows[e.RowIndex].FindControl("lblEmpId");
                _sqlCommand.CommandText = "usp_GridViewExample";
                _sqlCommand.Parameters.AddWithValue("@Event", "Delete");
                _sqlCommand.Parameters.AddWithValue("@EmpId", Convert.ToInt32(id.Text));
                _sqlCommand.CommandType = CommandType.StoredProcedure;                               
                int result = Convert.ToInt32(_sqlCommand.ExecuteNonQuery());
                if (result > 0)
                {
                    lblMessage.Text = "Record Deleted Successfully";
                    lblMessage.ForeColor = System.Drawing.Color.Green;
                    grvEmployee.EditIndex = -1;
                    BindEmployeeData();
                }
                else
                {
                    lblMessage.Text = "Failed";
                    lblMessage.ForeColor = System.Drawing.Color.Red;
                    BindEmployeeData();
                }
            }
            catch (Exception ex)
            {
                lblMessage.Text = "Check your input data";
                lblMessage.ForeColor = System.Drawing.Color.Red;
            }
            finally
            {
                CloseConnection();
                DisposeConnection();
            }
        }

        protected void grvEmployee_RowUpdating(object sender, GridViewUpdateEventArgs e)
        {
            try
            {
                CreateConnection();
                OpenConnection();

                Label Empid = (Label)grvEmployee.Rows[e.RowIndex].FindControl("lblEmpId");
                TextBox txtFirstName = (TextBox)grvEmployee.Rows[e.RowIndex].FindControl("txtFirstName");
                TextBox txtLastName = (TextBox)grvEmployee.Rows[e.RowIndex].FindControl("txtLastName");
                TextBox txtPhoneNumber = (TextBox)grvEmployee.Rows[e.RowIndex].FindControl("txtPhoneNumber");
                TextBox txtEmailAddress = (TextBox)grvEmployee.Rows[e.RowIndex].FindControl("txtEmailAddress");
                TextBox txtSalary = (TextBox)grvEmployee.Rows[e.RowIndex].FindControl("txtSalary");


                _sqlCommand.CommandText = "usp_GridViewExample";
                _sqlCommand.CommandType = CommandType.StoredProcedure;
                _sqlCommand.Parameters.AddWithValue("@Event", "Update");
                _sqlCommand.Parameters.AddWithValue("@FirstName", Convert.ToString(txtFirstName.Text.Trim()));
                _sqlCommand.Parameters.AddWithValue("@LastName", Convert.ToString(txtLastName.Text.Trim()));
                _sqlCommand.Parameters.AddWithValue("@PhoneNumber", Convert.ToString(txtPhoneNumber.Text.Trim()));
                _sqlCommand.Parameters.AddWithValue("@EmailAddress", Convert.ToString(txtEmailAddress.Text.Trim()));
                _sqlCommand.Parameters.AddWithValue("@Salary", Convert.ToDecimal(txtSalary.Text));
                _sqlCommand.Parameters.AddWithValue("@EmpId", Convert.ToDecimal(Empid.Text));

                int result = Convert.ToInt32(_sqlCommand.ExecuteNonQuery());
                if (result > 0)
                {
                    lblMessage.Text = "Record Updated Successfully";
                    lblMessage.ForeColor = System.Drawing.Color.Green;
                    grvEmployee.EditIndex = -1;
                    BindEmployeeData();
                }
                else
                {
                    lblMessage.Text = "Failed";
                    lblMessage.ForeColor = System.Drawing.Color.Red;
                }
            }
            catch (Exception ex)
            {
                lblMessage.Text = "Check your input data";
                lblMessage.ForeColor = System.Drawing.Color.Red;
            }
            finally
            {
                CloseConnection();
                DisposeConnection();
            }
        }

        protected void grvEmployee_RowCancelingEdit(object sender, GridViewCancelEditEventArgs e)
        {
            grvEmployee.EditIndex = -1;
            BindEmployeeData();
        }

        protected void grvEmployee_PageIndexChanging(object sender, GridViewPageEventArgs e)
        {
            grvEmployee.PageIndex = e.NewPageIndex;
            BindEmployeeData();
        }
    }
}
